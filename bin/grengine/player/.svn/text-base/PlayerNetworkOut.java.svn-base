package player;

import java.io.*;
import java.net.*;
import java.util.ArrayList;
import java.util.HashMap;

import appstate.BaseState;

import network.NetworkMessage;


public class PlayerNetworkOut {
	private PrintStream printOut;
	private Socket outSock;
	private ArrayList<NetworkMessage> messagesOut;
	public static HashMap<Short,Integer> nwProfiler = new HashMap<Short,Integer>();
	public void sendFrameData()
	{

		int maxBytesPerFrame = 3000;
		int frameSize = 0;
		synchronized (messagesOut)
		{
			if (messagesOut.size() < 1)
				return;
			
			
			while (frameSize<maxBytesPerFrame && messagesOut.size() > 0)
			{
				NetworkMessage msgOut = messagesOut.get(0);
				if (msgOut != null)
				{
					msgOut.setPointerPosition(0);
					short size = msgOut.getSize();
					short msgID = msgOut.readShort();
					msgOut.setPointerPosition(0);
					frameSize+= size;
					
					
					
					
					byte[] ba = msgOut.getByteArray();
					printOut.write(msgOut.getSizeAsByteArray(),0,2); //write the size of the packet
					printOut.write(ba,0,size); //write the packet itself
					printOut.flush();

					messagesOut.remove(0);
					
					int newSize = size;
					
					if (nwProfiler.containsKey(msgID))
					{
						newSize+= nwProfiler.get(msgID);
					}
					nwProfiler.put(msgID, newSize);

				}
			}
			//if (messagesOut.size() > 0)
			//System.out.println(messagesOut.size()+" messages in the queue; Sent "+frameSize+" bytes this frame");
		}
	}
	public PlayerNetworkOut(Socket incoming) {
		outSock = incoming;
		messagesOut = new ArrayList<NetworkMessage>();
		try
		{
			printOut = new PrintStream(outSock.getOutputStream());
			
		}
		catch(IOException e)
		{
			
		}
	}

	public void close() {
		printOut.close();
		
	}

	public void addMessage(NetworkMessage msg) {
		messagesOut.add(msg);
		
	}
	
	

	
}
